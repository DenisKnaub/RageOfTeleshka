# -*- coding: utf-8 -*-
"""
Created on Sun May 15 23:14:38 2022

@author: dKnau
"""
# Для того чтобы сервер и клиент общались, нужно их запускать по отдельности в разных консолях, 
# если на одном ПК запускают. Для этого в game.py в самом начале есть строка с запуском клиента

# программа заказчика
import socket

port = open('port.txt', 'r', encoding = "utf-8").read() # из за того что каждый раз нужен новый порт, считываем его из файла

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # создаем сокет
sock.connect(('localhost', int(port))) # свяжем наш сокет с данными хостом и портом с помощью метода bind

# команды управления
forward = "1111" # вперед
back = "-1-1-1-1" # назад
right = "1100" # направо
left = '0011' # налево
stop = "0000"
cl = 'Close' # команда закрытия сервера

data = b'Stop' # служит для первой отправки при запуске

# в клиенте сначала нужно отправить сообщение (в виде закодированной строки), после чего получить ответ от сервера(показания с датчиков)
# сообщение от сервера выглядит следующим образом data = True,88
# True - наличие стены, 88 - дальномер
# для обращения к показаниям датчика нужно обратиться по индексу data.decode().split(',')[0]
# сначала сообщение декодируется в строку, делится на отдельные слова и выбирается нужный индекс датчика (0 - всегда датчик столкновения)
while True:
         
    if data.decode().split(',')[0] == 'Close': # если пришло сообщение о закртии окна эмуляции, выходим из цикла
        break
    
    if (data.decode().split(',')[0] == 'True'): # проезд свободен
        sock.send(forward.encode()) # отправляем сообщение

    if (data.decode().split(',')[0] == 'False'): # ударились в стену
        sock.send(right.encode()) # отправляем сообщение    
    
    if (data.decode() == 'Stop'): 
        sock.send(stop.encode()) # отправляем сообщение
        
    data = sock.recv(1024) # получаем сообщение от сервера
    print(f'Получил client ' + str(data))
    

sock.send(cl.encode()) # отправляем серверу сообщение о закрытии         
sock.close()
print ('Клиент закрыт')





            



